namespace = cenj_migration

cenj_migration.1 = {
    type = country_event
    hidden = yes

    trigger = {
        has_law = law_type:law_no_migration_controls
        AND = {
            any_scope_state = {
                average_sol > 15
                any_neighbouring_state = {
                    NOT = { owner = ROOT }
                }
                average_sol < PREV.average_sol
            }
        }
    }

    immediate = {
		# change to random_scope_state if it doesn't work
        random_scope_state = {
            limit = {
                average_sol > 15
                random_neighbouring_state = {
                    NOT = { owner = ROOT }
                }
                average_sol < PREV.average_sol
            }
        save_scope_as = migrant_target
        random_neighbouring_state = {
                limit = {
                    NOT = { owner = ROOT }
                    average_sol < PREV.average_sol
                }
                save_scope_as = migrant_source
            }
        }

        scope:migrant_source = {
            random_scope_pop = {
                limit = { is_pop_type = peasants }
                change_pop_culture_migrant = { ROOT = ROOT }
                culture = { save_scope_as = migrant_culture }
            }
            random_scope_pop = {
                limit = { culture = cu:migrant }
                save_scope_as = migrant
            }
        }

        if = {
            limit = { exists = scope:migrant }
            scope:migrant = { move_pop = scope:migrant_target }
            random_scope_pop = {
                limit = { culture = cu:migrant }
                change_pop_culture = {
                    target = scope:migrant_culture
                    value = 1
                }
            }
            #if = {
            #    limit = { is_ai = no }
            #    post_notification = cenj_migration_notification
            #}
        }
    }
}